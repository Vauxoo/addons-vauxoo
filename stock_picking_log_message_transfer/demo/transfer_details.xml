<?xml version="1.0"?>
<openerp>
    <data noupdate="1">

        <!--Transfer of Product in the dispatch of Sale Order -->

        <record id="transfer_sale_wizard_log_message" model="stock.transfer_details">
            <field name="picking_id" model="stock.picking" search="[('origin', '=', 'Sale Order Log Message')]"/>
            <field name="picking_source_location_id" ref="stock.stock_location_output"/>
            <field name="picking_destination_location_id" ref="stock.stock_location_customers"/>
        </record>


        <!-- Transfer Detail Items of Product Transfer -->

        <record id="transfer_sale_wizard_log_message_item" model="stock.transfer_details_items">
            <field name="transfer_id" ref="transfer_sale_wizard_log_message"/>
            <field name="product_id" ref="product.product_product_38"/>
            <field name="product_uom_id" ref="product.product_uom_unit"/>
            <field name="quantity">1</field>
            <field name="sourceloc_id"  ref="stock.stock_location_output"/>
            <field name="destinationloc_id" ref="stock.stock_location_customers"/>
        </record>

        <!-- Make transfer of product -->

        <!-- TODO data demo need to be update to give availability to the product -->
        <!-- used in the picking. This way we could use action_assign instead -->
        <!-- force_assign -->
        <!-- <function model="stock.picking" name="action_assign"> -->
        <!--     <value model="stock.picking" search="[('origin', '=', 'Sale Order Log Message')]"/> -->
        <!-- </function> -->

        <function model="stock.picking" name="force_assign">
            <value model="stock.picking" search="[('origin', '=', 'Sale Order Log Message')]"/>
        </function>

        <function model="stock.transfer_details"
                  name="do_detailed_transfer"
                  eval="[ref('transfer_sale_wizard_log_message')]"
                  />

    </data>
</openerp>
