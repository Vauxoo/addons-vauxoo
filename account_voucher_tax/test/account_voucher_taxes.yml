-
  Test for check partial voucher with a same invoice
-
  I set the context as would do the action in supplier invoice menuitem
-
  !context
    'default_type': 'in_invoice'
-
  I create a supplier invoice
-
  !record {model: account.invoice, id: account_invoice_supplier_tax0, view: account.invoice_supplier_form}:
    account_id: account.a_pay
    check_total: 6182.80
    company_id: base.main_company
    currency_id: base.EUR
    invoice_line:
      - account_id: account.a_expense
        name: '[PC1] Basic PC'
        price_unit: 5330.0
        product_id: product.product_product_5
        quantity: 1.0
        invoice_line_tax_id:
            - account_voucher_tax_purchase_iva16
    journal_id: account.expenses_journal
    partner_id: base.res_partner_23
    reference_type: none
-
  I change the state of invoice to open by clicking Validate button
-
  !workflow {model: account.invoice, action: invoice_open, ref: account_invoice_supplier_tax0}
-
  I check that the invoice state is now "Open"
-
  !assert {model: account.invoice, id: account_invoice_supplier_tax0}:
    - state == 'open'
-
  I set the context that will be used for the encoding of all the vouchers of this file
-
  !context
    'type': 'payment'
-
  I create the first voucher of payment with values 6182.80
-
  !record {model: account.voucher, id: account_voucher_tax1, view: account_voucher.view_vendor_payment_form}:
    account_id: account.cash
    company_id: base.main_company
    amount: 6182.80
    journal_id: account.bank_journal
    name: 'First payment: with tax'
    partner_id: base.res_partner_23
    date: !eval time.strftime("%Y-%m-%d")
    type: 'payment'
-
  I click to validate button on voucher
-
  !workflow {model: account.voucher, action: proforma_voucher, ref: account_voucher_tax1}
-
  I check that the voucher state is now "Posted"
-
  !assert {model: account.voucher, id: account_voucher_tax1}:
    - state == 'posted'
-
  I check that the invoice state is now "Paid"
-
  !assert {model: account.invoice, id: account_invoice_supplier_tax0}:
    - state == 'paid'
-
  I check that the Journal Items is generated with tax section from voucher
-
  !python {model: account.voucher}: |
    voucher_id = self.browse(cr, uid, ref('account_voucher_tax1'))
    for move_line in voucher_id.move_id.line_id:
        if round(move_line.credit, 2) == 852.80:
            assert move_line.account_id.id == ref('account_iva_voucher_16'), "Wrong account IVA in Journal Item"
        elif round(move_line.debit, 2) == 852.80:
            assert move_line.account_id.id == ref('account_iva_voucher'), "Wrong account IVA Voucher in Journal Item"
        elif round(move_line.credit, 2) == 6182.80:
            assert move_line.account_id.id == voucher_id.account_id.id, "Wrong bank account in Journal Item"
        elif round(move_line.debit, 2) == 6182.80:
            assert move_line.account_id.id == voucher_id.partner_id.property_account_payable.id, "Wrong payable account in Journal Item"
        else:
            assert False, "Wrong entry. Unrecognized account move line for voucher tax."
