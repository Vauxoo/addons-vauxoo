-
  Reports Per Journal On Invoice Tests
-
  1.- In order to test reports per journal on invoices, we will test the wizard without a report assigned in the journal
-
  1.1.- I create a customer invoice
-
  !record {model: account.invoice, id: account_invoice_customer0 , view: account.invoice_form}: &account_invoice
    payment_term: account.account_payment_term_advance
    journal_id: account.sales_journal
    partner_id: base.res_partner_3
    reference_type: none
    name: 'Test Customer Invoice'
    invoice_line:
      - product_id: product.product_product_5
        quantity: 10.0
        price_unit: 1
-
  1.2.- I overwrite the journal field (It is necessary overwrite the field to make it work! only in test yaml (BUG))
-
  !record {model: account.invoice, id: account_invoice_customer0, view: account.invoice_form}:
    journal_id: account.sales_journal
-
  1.3.- I check that initially customer invoice state is "Draft"
-
  !assert {model: account.invoice, id: account_invoice_customer0}:
    - state == 'draft'
-
  1.4.- I check that the customer invoice is a "Customer Invoice"
-
  !assert {model: account.invoice, id: account_invoice_customer0, string: This is not a customer invoice}:
    - type == 'out_invoice'
-
  1.5.- I change the state of invoice to open by clicking Validate button
-
  !workflow {model: account.invoice, action: invoice_open, ref: account_invoice_customer0}
-
  1.6.- I check that the invoice state is now "Open"
-
  !assert {model: account.invoice, id: account_invoice_customer0}:
    - state == 'open'
-
  1.7.- I generate the default invoice report through the wizard 
-
  !python {model: invoice.report.per.journal}: |
    context={}
    context.update({'active_model': 'account.invoice', 'active_ids': [ref('account_invoice_customer0')]})
    self._get_journal(cr, uid, context)
    self._get_report(cr, uid, context)
-
  2.- In order to test the report defined on an journal, we will set the Invoice Demo Report to the Sale Journal
-
  !python {model: account.journal}: |
    self.write(cr, uid, [ref('account.sales_journal')], {'invoice_report_id': ref('invoice_report_per_journal.invoice_report_demo')})
-
  2.1.- I generate the report assigned in the journal through the wizard
-
  !python {model: invoice.report.per.journal}: |
    context={}
    context.update({'active_model': 'account.invoice', 'active_ids': [ref('account_invoice_customer0')]})
    self._get_journal(cr, uid, context)
    self._get_report(cr, uid, context)
