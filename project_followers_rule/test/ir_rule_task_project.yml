-
  Create a user 'Demo Task Rule'
-
  !record {model: res.users, id: res_user_demo_task_rule0}:
    company_id: base.main_company
    name: Demo Task Rule
    login: dtask@example.com
    password: dtask
    groups_id:
      - base.group_user
      - group_followers_project
-
  Permissions Testing Task
-
  !python {model: project.task}: |
    import traceback
    from openerp.osv.orm import except_orm
    from openerp.tools import mute_logger
    from openerp import tools
    test_ok = False
    obj_task = self.browse(cr, uid, ref("project_task_test_vauxoo"))
    obj_user = self.pool.get('res.users')
    user_partner_id = obj_user.browse(cr, uid, ref("res_user_demo_task_rule0")).partner_id.id
    obj_user.browse(cr, uid, ref("res_user_demo_task_rule0")).partner_id.write({'email': 'dtask@example.com'})
    ###############################################################################################
    #                             Project privacy_visibility: Followers                           #
    #                         follower_project: False, follower_task: False                       #
    ###############################################################################################
    log("Testing task permissions when visibility project is Followers Only")
    # HR-Employee, Lectura proyecto- siendo seguidor de tarea
    log( '----------------1---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_user"), ref("group_followers_project")])]} )
    log( '----------------2---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------3---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------4---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Followers                           #
    #                         follower_project: True, follower_task: False                        #
    ###############################################################################################
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(4, user_partner_id)]})
    self.pool.get('res.groups').write(cr, uid, [ref("base.group_hr_user")], {'implied_ids': [(6, 0, [])]})
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project"), ref("project.group_project_user")])]} )
    log( '----------------5---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    try:
        with mute_logger('openerp.osv.orm'):
            self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------6---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Followers                           #
    #                         follower_project: False, follower_task: True                        #
    ###############################################################################################
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(3, user_partner_id)]})
    self.pool.get('project.task').write(cr, uid, ref("project_task_test_vauxoo"), {'message_follower_ids': [(4, user_partner_id)]})
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    log( '----------------7---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------8---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Followers                           #
    #                         follower_project: True, follower_task: True                         #
    ###############################################################################################
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(4, user_partner_id)]})
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    log( '----------------9---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------10---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Employees                           #
    #                         follower_project: False, follower_task: False                       #
    ###############################################################################################
    log("Testing task permissions when visibility project is Employees Only ")
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'privacy_visibility': 'employees'})
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(3, user_partner_id)]})
    self.pool.get('project.task').write(cr, uid, ref("project_task_test_vauxoo"), {'message_follower_ids': [(3, user_partner_id)]})
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    # HR-Employee, Lectura proyecto- siendo seguidor de tarea
    log( '----------------11---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------12---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Employees                           #
    #                         follower_project: True, follower_task: False                        #
    ###############################################################################################
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(4, user_partner_id)]})
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    log( '----------------13---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------14---------------------------')
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Employees                           #
    #                         follower_project: False, follower_task: True                        #
    ###############################################################################################
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(3, user_partner_id)]})
    self.pool.get('project.task').write(cr, uid, ref("project_task_test_vauxoo"), {'message_follower_ids': [(4, user_partner_id)]})
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    log( '----------------15---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------16---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Employees                           #
    #                         follower_project: True, follower_task: True                         #
    ###############################################################################################
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(4, user_partner_id)]})
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    log( '----------------17---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------18---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    
    ###############################################################################################
    #                             Project privacy_visibility: Portal                              #
    #                         follower_project: False, follower_task: False                       #
    ###############################################################################################
    log("Testing task permissions when visibility project is Portal Users and Employees ")
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'privacy_visibility': 'portal'})
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(3, user_partner_id)]})
    self.pool.get('project.task').write(cr, uid, ref("project_task_test_vauxoo"), {'message_follower_ids': [(3, user_partner_id)]})
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    # HR-Employee, Lectura proyecto- siendo seguidor de tarea
    log( '----------------19---------------------------')
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------20---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Portal                              #
    #                         follower_project: True, follower_task: False                        #
    ###############################################################################################
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(4, user_partner_id)]})
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    log( '----------------21---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------22---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Portal                              #
    #                         follower_project: False, follower_task: True                        #
    ###############################################################################################
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(3, user_partner_id)]})
    self.pool.get('project.task').write(cr, uid, ref("project_task_test_vauxoo"), {'message_follower_ids': [(4, user_partner_id)]})
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    log( '----------------23---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------24---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    ###############################################################################################
    #                             Project privacy_visibility: Portal                              #
    #                         follower_project: True, follower_task: True                         #
    ###############################################################################################
    self.pool.get('project.project').write(cr, uid, ref("project_vauxoo_test"), {'message_follower_ids': [(4, user_partner_id)]})
    # HR-Employee, Project-False, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("group_followers_project")])]} )
    log( '----------------25---------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Employee, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_user"), ref("project.group_project_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Employee, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_user"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    log( '----------------26--------------------------' )
    try:
        with mute_logger('openerp.osv.orm'):
            with mute_logger('openerp.addons.base.ir.ir_model'):
                self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    except except_orm:
        error = tools.ustr( traceback.format_exc() )
        test_ok = True
    assert test_ok, "Test failed."
    # HR-Manager, Project-User, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_user"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
    # HR-Manager, Project-Manager, Lectura proyecto- siendo seguidor de tarea
    obj_user.write(cr, uid, [ref("res_user_demo_task_rule0")], {'groups_id': [(6, 0, [ref("project.group_project_manager"), ref("base.group_hr_manager"), ref("group_followers_project")])]} )
    self.write(cr, ref("res_user_demo_task_rule0"), ref("project_task_test_vauxoo"), {'name':'write task'})
